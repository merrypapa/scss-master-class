#2.1 Life before grid
- grid can divide the section as grid

#2.2 CSS grid basic concepts
- grid template column/row set the size and number of segment.

#2.3 grid template area
- as set the grid template area, the grid can be assigned to the designated element we want.

#2.4 rows and columns
- grid-row-start / grid-row-end: related to the line not the element
- grid-column-start / grid-column-end: related to the line not the element

#2.5 shortcuts
- grid-column(row)-start/end --> grid-column: 1 / 4, -1 -> all the way to the end
- span -> cell
- grid-row: 2 / span 2

#2.6 Line Naming
- [first-line] 100px [second-line] 100px ... --> line has the name

#2.7 Grid template
- fr -> fraction(space available) -> need to set the height to make the room horizontally
- grid-template

#2.8 Plcae Items
- justify items(default: stretch) / align items - >place-items

#2.9 Place Content
- content -> whole items / item -> individual item
- place content -> vertical / horizontal

#2.10 Auto Columns and rows
- align-self / justify-self -> for the individual item
- if there is more contents than the grid setting -> grid-auto-rows: 100px; -> will add more rows if there is more contents to be displayed
- grid-auto-flow: column; -> create more column not row / row -> will create more rows 
- grid-auto-column -> set the size of column

#2.11 minmax
- minmax(100px,1fr): minimum is 100px, and stay at 1fr if the screen is big enough

#2.12 auto-fit auto-fill
- responsive
- auto-fill -> fill the row with columns as much as the screen allows
- auto-fit -> takes the current div and stretch them
- ex. repeat(auto-fill/fit, minmax(100px,1fr));

#2.13 min-content max-content
- min-content -> resize the box to minimum size according to the content
- max-content -> resize the box to maximum size according to the content

#3.0 CSS Preprocessors and Set up
- is going to be market standard
- after downloading the file from Github run the command below
- 1) npm i && npm run dev
- 2) yarn && yarn dev

#3.1 Variables and Nesting
- the code in the scss will beome css
_ _ means the scss code that you don't want to translate to css -> only for scss
- $key:value -> import to main scss file 
- nest -> point the exact element -> put the subclass into main class to make the direct pointing
- &: means (parent class): 

#3.2 Mixin
- @mixin name{} -> like function
- @include name(); in the scss class -> like function
- can put the if function as @if

#3.3 Extends
- use extends when we don't want to repeat the style
- mixin -> when you want to code
- extend -> %name{}

#3.4 Awesome Mixins and Conclusions
- device size setting -> responsive to the device screen size